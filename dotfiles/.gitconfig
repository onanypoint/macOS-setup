[include]
    path = ~/.gitconfig-user

[core]
    editor = nano
    whitespace = fix, -indent-with-non-tab, trailing-space, cr-at-eol
    excludesfile = ~/.gitignore.base

[alias]
    # http://blog.apiaxle.com/post/handy-git-tips-to-stop-you-getting-fired/
    # http://caiustheory.com/git-git-git-git-git/
    # https://densitylabs.io/blog/5-useful-tricks-you-didn't-know-for-git
    # https://git-scm.com/docs/pretty-formats
    # https://jvns.ca/blog/2024/02/16/popular-git-config-options/#diff-algorithm-histogram

    cherryb = !python ~/.config.git/scripts/mr-from-commits.py

    git = !exec git

    co = checkout
    st = status
    df = diff

    l = log --abbrev-commit --decorate --format=format:'%C(auto)%h - %as (%ar)%d%n%C(reset)''          %s%C(dim white) - %an%C(reset)%n'
    st = "status --short --branch"

    fdiff = "!f() { git diff $@ --name-only | fzf -m --ansi --preview 'git diff $@ --color=always -- {-1}'; }; f"

    stash-pop-force = !git stash show -p | git apply && git stash drop
    
    # https://stackoverflow.com/questions/1186535/how-do-i-modify-a-specific-commit/48999882#48999882
    amend-to = "!f() { SHA=`git rev-parse \"$1\"`; git stash -k && git commit --fixup \"$SHA\" && GIT_SEQUENCE_EDITOR=true git rebase --interactive --autosquash \"$SHA^\" && git stash pop; }; f"

[status]
    submoduleSummary = true

[diff]
    submodule = log
	algorithm = histogram
    # uses different colours to highlight lines in diffs that have been “moved”
	colorMoved = default

[filter "nbstrip_full"]
    clean = "jq --indent 1 'if ((.metadata | has(\"git\") | not) or (.metadata.git | has(\"clear_output\") | not)) or .metadata.git.clear_output then \
            (.cells[] | select(has(\"outputs\")) | .outputs) = [] \
            | (.cells[] | select(has(\"execution_count\")) | .execution_count) = null \
            | .cells[].metadata = {} \
            | del(.cells[] | select(.source == [])) \
            | .metadata = {\"language_info\": {\"name\": \"python\", \"pygments_lexer\": \"ipython3\"}} \
            else . end'"
    smudge = cat
    required = true

[pull]
	rebase = false

[init]
	defaultBranch = main

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[push]
    # always push the local branch to a remote branch with the same nam
	autosetupremote = true

[merge]
	conflictstyle = zdiff3
    
[rerere]
    #  remembers how merge conflicts were resolved uring a rebase and automatically resolves or you when it can.
	enabled = true
[help]
	autoCorrect = 1
